server.port=8084
eureka.instance.clientUrl.defaultZone=http://localhost:8761/

spring.datasource.url=jdbc:mysql://localhost:3306/kafkainventorydb ?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password =
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.topic.name=product_topics

#spring.kafka.topic.product.update.name=update_product_topics
spring.kafka.topic.product.update.name=order_topics
spring.kafka.topic.billing.name=billing_topics
spring.kafka.topic.quantity.update.name=order_product_topics
spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.update.product.consumer.group-id= update_product_event
spring.kafka.update.bill.consumer.group-id= bill_product_event
#spring.kafka.update.quantity.consumer.group-id: update_quantity_event
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.boot.message=hello, inventory-service yes
