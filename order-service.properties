server.port=8081
eureka.instance.clientUrl.defaultZone=http://localhost:8761/

spring.datasource.url=jdbc:mysql://localhost:3306/kafkaorderlastdb ?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password =
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

spring.kafka.producer.bootstrap-servers= localhost:9092
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.topic.order.name=order_topics
spring.kafka.topic.payment.name= payment_topics
spring.kafka.topic.billing.name=billing_topics
spring.kafka.topic.customer.name=customer_topics
spring.kafka.topic.product.name=product_topics
spring.kafka.topic.customer.update.name=update_customer_topics
spring.kafka.topic.product.update.name=update_product_topics
spring.kafka.topic.billing.deux.name=billing_deux_topics
#spring.kafka.topic.quantity.update.name=update_quantity_topics
#spring.kafka.topic.quantity.update.name=order_product_topics

spring.kafka.consumer.bootstrap-servers= localhost:9092
spring.kafka.consumer.group-id= order
spring.kafka.update.bill.consumer.group-id=update_qty
spring.kafka.consumer.bill.group-id= bill
spring.kafka.consumer.payment.group-id= payment
#spring.kafka.consumer.quantity.group-id: order1
spring.kafka.consumer.auto-offset-reset= earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.cloud.bus.refresh.enabled: true
spring.cloud.bus.env.enabled: true
endpoints.spring.cloud.bus.refresh.enabled: true
endpoints.spring.cloud.bus.env.enabled: true

spring.cloud.stream.kafka.binder.autoAddPartitions=true
spring.cloud.stream.kafka.binder.zkNodes=localhost:2181
spring.cloud.stream.kafka.binder.brokers=localhost:9092

spring.boot.message=hello, order-service yes
